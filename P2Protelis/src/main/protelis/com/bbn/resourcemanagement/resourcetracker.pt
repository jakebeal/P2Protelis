module com:bbn:resourcemanagement:resourcetracker

import protelis:coord:accumulation
import protelis:coord:spreading
import protelis:lang:utils
import protelis:coord:nonselfstabilizing:accumulation

def once(v) {
    rep(x <- v) { x };
}

def hopDistanceTo(leader) {
    rep(d <- 0) { mux(leader) { 0 } else { 1 + minHood(nbr(d)) } }
}

def countNodes() {
    let leader = gossip(once(self.nextRandomDouble()), min);
    countDevices(hopDistanceTo(leader))
}

countNodes();
